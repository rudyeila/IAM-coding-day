{
  "info": {
    "_postman_id": "16a920ca-1dbb-4866-a00e-b4f538f0ef6d",
    "name": "IAM Coding Day Environment",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Delete All ... Copy",
      "item": [
        {
          "name": "delete all  consumer organizations",
          "event": [
            {
              "listen": "test",
              "script": {
                "exec": [
                  "//basic checks\r",
                  "pm.test(request.name + \": Response code is 200\", function () {pm.expect(pm.response.code).to.be.eq(200);});\r",
                  "\r",
                  "\r",
                  "let jsonResponse =pm.response.json();\r",
                  "\r",
                  "let resultUsers = jsonResponse.result;\r",
                  "\r",
                  "for (let user of resultUsers) {\r",
                  "    pm.sendRequest({\r",
                  "        url: pm.environment.get(\"managedBaseURL\") + \"/user/\" + user._id,\r",
                  "        method: 'DELETE',\r",
                  "        header: {\r",
                  "            'X-OPENIDM-USERNAME' : pm.environment.get(\"idmUsername\"),\r",
                  "            \"X-OPENIDM-PPASSWORD\" : pm.environment.get(\"idmPassword\")\r",
                  "        }\r",
                  "    },\r",
                  "        function (err, res) {\r",
                  "            pm.expect(err).to.not.be.ok;\r",
                  "            pm.expect(res).to.have.property('status', 'OK');\r",
                  "        });\r",
                  "}"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "X-OPENIDM-USERNAME",
                "type": "text",
                "value": "{{idmUsername}}"
              },
              {
                "key": "X-OPENIDM-PASSWORD",
                "type": "text",
                "value": "{{idmPassword}}"
              }
            ],
            "url": {
              "raw": "{{managedBaseURL}}/user?_queryFilter=true&_pageSize=99999&_sortKeys=domain&_totalPagedResultsPolicy=ESTIMATE&_fields=*",
              "host": [
                "{{managedBaseURL}}"
              ],
              "path": [
                "user"
              ],
              "query": [
                {
                  "key": "_queryFilter",
                  "value": "true"
                },
                {
                  "key": "_pageSize",
                  "value": "99999"
                },
                {
                  "key": "_sortKeys",
                  "value": "domain"
                },
                {
                  "key": "_totalPagedResultsPolicy",
                  "value": "ESTIMATE"
                },
                {
                  "key": "_fields",
                  "value": "*"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Single IDM Calls",
      "item": [
        {
          "name": "create user",
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-OPENIDM-USERNAME",
                "type": "text",
                "value": "{{idmUsername}}"
              },
              {
                "key": "X-OPENIDM-PASSWORD",
                "type": "text",
                "value": "{{idmPassword}}"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\r\n        \"streetAddress\" : \"Wilhelmstra√üe 13\",\r\n        \"city\" : \"Heidelberg\",\r\n        \"stateProvince\" : \"Baden-Wuerttemberg\",\r\n        \"postalCode\" : \"69115\",\r\n        \"country\" : \"Germany\",\r\n        \"givenName\" : \"Otto\",\r\n        \"sn\" : \"Hartmann\",\r\n        \"mail\" : \"otto.hartmann@privat.com\",\r\n        \"password\" : \"OttoRulez1!\",\r\n        \"hobbies\" : [ \"dancing\", \"climbing\", \"poker\"],\r\n        \"job\" : \"accountant\",\r\n        \"healthFile\" : [\"prevotella infection\", \"smallpox\"],\r\n        \"birthdate\" : \"1996-05-12\",\r\n        \"gender\" : \"male\",\r\n        \"customerSince\" : \"2014-08-21\"\r\n    }",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{managedBaseURL}}/user?_action=create",
              "host": [
                "{{managedBaseURL}}"
              ],
              "path": [
                "user"
              ],
              "query": [
                {
                  "key": "_action",
                  "value": "create"
                }
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "OIDC",
      "item": [
        {
          "name": "Get Token and Validate (Use Autheorization - Get New Access Token !)",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "var accessToken = pm.request.auth.oauth2.get('accessToken');\r",
                  "pm.collectionVariables.set(\"collection_authCodeAccessToken\", accessToken);"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "auth": {
              "type": "oauth2",
              "oauth2": [
                {
                  "key": "scope",
                  "value": "{{scopes}}",
                  "type": "string"
                },
                {
                  "key": "accessTokenUrl",
                  "value": "{{baseURL}}{{amDeploymentPath}}/oauth2{{realmPath}}/access_token",
                  "type": "string"
                },
                {
                  "key": "authUrl",
                  "value": "{{baseURL}}{{amDeploymentPath}}/oauth2{{realmPath}}/authorize",
                  "type": "string"
                },
                {
                  "key": "tokenName",
                  "value": "kitToken",
                  "type": "string"
                },
                {
                  "key": "grant_type",
                  "value": "authorization_code",
                  "type": "string"
                },
                {
                  "key": "tokenType",
                  "value": "Bearer",
                  "type": "string"
                },
                {
                  "key": "useBrowser",
                  "value": false,
                  "type": "boolean"
                },
                {
                  "key": "redirect_uri",
                  "value": "{{redirectURI}}",
                  "type": "string"
                },
                {
                  "key": "clientSecret",
                  "value": "{{clientSecret}}",
                  "type": "string"
                },
                {
                  "key": "clientId",
                  "value": "{{clientId}}",
                  "type": "string"
                },
                {
                  "key": "challengeAlgorithm",
                  "value": "S256",
                  "type": "string"
                },
                {
                  "key": "state",
                  "value": "abc",
                  "type": "string"
                },
                {
                  "key": "addTokenTo",
                  "value": "header",
                  "type": "string"
                },
                {
                  "key": "client_authentication",
                  "value": "header",
                  "type": "string"
                }
              ]
            },
            "method": "GET",
            "header": [],
            "url": {
              "raw": "{{baseURL}}{{amDeploymentPath}}/oauth2{{realmPath}}/tokeninfo",
              "host": [
                "{{baseURL}}{{amDeploymentPath}}"
              ],
              "path": [
                "oauth2{{realmPath}}",
                "tokeninfo"
              ]
            }
          },
          "response": []
        },
        {
          "name": "Userinfo",
          "request": {
            "method": "GET",
            "header": [
              {
                "key": "Authorization",
                "value": "Bearer {{collection_authCodeAccessToken}}",
                "type": "text"
              }
            ],
            "url": {
              "raw": "{{baseURL}}{{amDeploymentPath}}/oauth2{{realmPath}}/userinfo",
              "host": [
                "{{baseURL}}{{amDeploymentPath}}"
              ],
              "path": [
                "oauth2{{realmPath}}",
                "userinfo"
              ]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "Set Up",
      "item": [
        {
          "name": "Init Request",
          "event": [
            {
              "listen": "prerequest",
              "script": {
                "exec": [
                  "pm.globals.set(\"jsonBody\", JSON.stringify(pm.iterationData.toObject()));"
                ],
                "type": "text/javascript"
              }
            }
          ],
          "request": {
            "method": "POST",
            "header": [
              {
                "key": "X-OPENIDM-USERNAME",
                "value": "{{idmUsername}}",
                "type": "text"
              },
              {
                "key": "X-OPENIDM-PASSWORD",
                "value": "{{idmPassword}}",
                "type": "text"
              }
            ],
            "body": {
              "mode": "raw",
              "raw": "{{jsonBody}}",
              "options": {
                "raw": {
                  "language": "json"
                }
              }
            },
            "url": {
              "raw": "{{managedBaseURL}}/user?_action=create",
              "host": [
                "{{managedBaseURL}}"
              ],
              "path": [
                "user"
              ],
              "query": [
                {
                  "key": "_action",
                  "value": "create"
                }
              ]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "collection_authCodeAccessToken",
      "value": ""
    }
  ]
}
